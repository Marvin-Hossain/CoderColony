name: Build and Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:  # Allows manual triggering

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up JDK 23
      uses: actions/setup-java@v3
      with:
        java-version: '23'
        distribution: 'temurin'
        cache: maven
        
    - name: Build with Maven
      run: mvn -B package -DskipTests
      
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '22'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Build frontend
      working-directory: ./frontend
      run: |
        npm ci
        npm run build
        
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}
        
    - name: Build and push backend Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/jobhunthub-backend:latest
        
    - name: Build and push frontend Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./frontend
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/jobhunthub-frontend:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: success()
    
    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
        
    - name: Generate Elastic Beanstalk config
      run: |
        mkdir -p .elasticbeanstalk
        echo '{
          "global": {
            "application_name": "JobHuntHub",
            "default_region": "${{ secrets.AWS_REGION }}",
            "profile": "eb-cli"
          },
          "deploy": {
            "artifact": "Dockerrun.aws.json"
          }
        }' > .elasticbeanstalk/config.yml
        
        echo '{
          "AWSEBDockerrunVersion": "1",
          "Image": {
            "Name": "${{ secrets.DOCKER_HUB_USERNAME }}/jobhunthub-backend:latest",
            "Update": "true"
          },
          "Ports": [
            {
              "ContainerPort": "8080",
              "HostPort": "80"
            }
          ],
          "Environment": [
            {
              "Name": "SPRING_PROFILES_ACTIVE",
              "Value": "prod"
            },
            {
              "Name": "SPRING_DATASOURCE_URL",
              "Value": "${{ secrets.JDBC_DATABASE_URL }}"
            },
            {
              "Name": "SPRING_DATASOURCE_USERNAME",
              "Value": "${{ secrets.JDBC_DATABASE_USERNAME }}"
            },
            {
              "Name": "SPRING_DATASOURCE_PASSWORD",
              "Value": "${{ secrets.JDBC_DATABASE_PASSWORD }}"
            },
            {
              "Name": "OPENAI_API_KEY",
              "Value": "${{ secrets.OPENAI_API_KEY }}"
            },
            {
              "Name": "OAUTH_CLIENT_ID",
              "Value": "${{ secrets.OAUTH_CLIENT_ID }}"
            },
            {
              "Name": "OAUTH_CLIENT_SECRET",
              "Value": "${{ secrets.OAUTH_CLIENT_SECRET }}"
            },
            {
              "Name": "APP_URL",
              "Value": "${{ secrets.APP_URL }}"
            },
            {
              "Name": "FRONTEND_URL",
              "Value": "${{ secrets.FRONTEND_URL }}"
            },
            {
              "Name": "ALLOWED_ORIGIN",
              "Value": "${{ secrets.ALLOWED_ORIGIN }}"
            }
          ]
        }' > Dockerrun.aws.json
        
    - name: Deploy to Elastic Beanstalk
      uses: einaregilsson/beanstalk-deploy@v21
      with:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        application_name: JobHuntHub
        environment_name: ${{ secrets.EB_ENVIRONMENT_NAME }}
        region: ${{ secrets.AWS_REGION }}
        deployment_package: Dockerrun.aws.json
        version_label: ${{ github.sha }}
        